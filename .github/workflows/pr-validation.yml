# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Pull Request Validation

on:
  pull_request:
    branches: [main, develop]

jobs:
  validate:
    name: Validate PR
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17.5
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: servicetest
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go 1.24.6
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.6'
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: |
          CGO_ENABLED=0 go test -v ./...
        env:
          SALES_DB_HOST: localhost
          SALES_DB_PORT: 5432
          SALES_DB_USER: postgres
          SALES_DB_PASSWORD: postgres
          SALES_DB_NAME: servicetest

      - name: Run vet
        run: CGO_ENABLED=0 go vet ./...

      - name: Install and run staticcheck
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          staticcheck -checks=all ./...

      - name: Install and run govulncheck
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./...

      - name: Check for security issues
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  build-test:
    name: Build Test
    runs-on: ubuntu-latest
    needs: validate

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Test build sales service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./zarf/docker/dockerfile.sales
          push: false
          tags: test-sales:latest

      - name: Test build auth service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./zarf/docker/dockerfile.auth
          push: false
          tags: test-auth:latest

      - name: Test build metrics service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./zarf/docker/dockerfile.metrics
          push: false
          tags: test-metrics:latest
