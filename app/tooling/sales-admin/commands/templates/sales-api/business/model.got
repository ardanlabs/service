package {{.DomainL}}

import (
	"time"

	"github.com/google/uuid"
)

// {{.DomainU}} represents an individual {{.DomainL}}.
type {{.DomainU}} struct {
	ID          uuid.UUID
	DateCreated time.Time
	DateUpdated time.Time
}

// New{{.DomainU}} is what we require from clients when adding a {{.DomainL}}.
type New{{.DomainU}} struct {
}

// Update{{.DomainU}} defines what informaton may be provided to modify an existing
// Home. All fields are optional so clients can send only the fields they want
// changed. It uses pointer fields so we can differentiate between a field that
// was not provided and a field that was provided as explicity blank. Normally
// we do not want to use pointers to basic types but we make exepction around
// marshalling/unmarshalling.
type Update{{.DomainU}} struct {
}
